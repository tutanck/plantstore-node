/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { GautamBoseSwantide } from "@fern-api/plantstore";
import urlJoin from "url-join";
import * as serializers from "../../../serialization";
import * as core from "../../../core";

export declare namespace Client {
  interface Options {
    environment: string;
  }
}

export class Client {
  constructor(private readonly options: Client.Options) {}

  public async createSalesMetricsDashboard(
    request: GautamBoseSwantide.CreateSalesMetricsDashboardRequest
  ): Promise<GautamBoseSwantide.hubspot.createSalesMetricsDashboard.Response> {
    const _response = await core.fetcher({
      url: urlJoin(this.options.environment, "/api/createSalesMetricsDashboard"),
      method: "POST",
      body: await serializers.hubspot.createSalesMetricsDashboard.Request.json(request),
    });
    if (_response.ok) {
      return {
        ok: true,
        body: await serializers.hubspot.createSalesMetricsDashboard.Response.parse(
          _response.body as serializers.hubspot.createSalesMetricsDashboard.Response.Raw
        ),
      };
    }

    return {
      ok: false,
      error: GautamBoseSwantide.hubspot.createSalesMetricsDashboard.Error._unknown(_response.error),
    };
  }

  public async getUserData(): Promise<GautamBoseSwantide.hubspot.getUserData.Response> {
    const _response = await core.fetcher({
      url: urlJoin(this.options.environment, "/api/getUserData"),
      method: "GET",
    });
    if (_response.ok) {
      return {
        ok: true,
        body: await serializers.hubspot.getUserData.Response.parse(
          _response.body as serializers.hubspot.getUserData.Response.Raw
        ),
      };
    }

    return {
      ok: false,
      error: GautamBoseSwantide.hubspot.getUserData.Error._unknown(_response.error),
    };
  }
}
