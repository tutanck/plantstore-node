/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { PlantStoreApi } from "@fern-api/plantstore";

export type PlantOwner =
    | PlantStoreApi.PlantOwner.Customer
    | PlantStoreApi.PlantOwner.Employee
    | PlantStoreApi.PlantOwner._Unknown;

export declare namespace PlantOwner {
    interface Customer extends PlantStoreApi.StoreCustomer, _Utils {
        type: "customer";
    }

    interface Employee extends PlantStoreApi.StoreEmployee, _Utils {
        type: "employee";
    }

    interface _Unknown extends _Utils {
        type: void;
    }

    interface _Utils {
        _visit: <_Result>(visitor: PlantStoreApi.PlantOwner._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        customer: (value: PlantStoreApi.StoreCustomer) => _Result;
        employee: (value: PlantStoreApi.StoreEmployee) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const PlantOwner = {
    customer: (value: PlantStoreApi.StoreCustomer): PlantStoreApi.PlantOwner.Customer => {
        return {
            ...value,
            type: "customer",
            _visit: function <_Result>(
                this: PlantStoreApi.PlantOwner.Customer,
                visitor: PlantStoreApi.PlantOwner._Visitor<_Result>
            ) {
                return PlantStoreApi.PlantOwner._visit(this, visitor);
            },
        };
    },

    employee: (value: PlantStoreApi.StoreEmployee): PlantStoreApi.PlantOwner.Employee => {
        return {
            ...value,
            type: "employee",
            _visit: function <_Result>(
                this: PlantStoreApi.PlantOwner.Employee,
                visitor: PlantStoreApi.PlantOwner._Visitor<_Result>
            ) {
                return PlantStoreApi.PlantOwner._visit(this, visitor);
            },
        };
    },

    _unknown: (value: { type: string }): PlantStoreApi.PlantOwner._Unknown => {
        return {
            ...(value as any),
            _visit: function <_Result>(
                this: PlantStoreApi.PlantOwner._Unknown,
                visitor: PlantStoreApi.PlantOwner._Visitor<_Result>
            ) {
                return PlantStoreApi.PlantOwner._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: PlantStoreApi.PlantOwner,
        visitor: PlantStoreApi.PlantOwner._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case "customer":
                return visitor.customer(value);
            case "employee":
                return visitor.employee(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
